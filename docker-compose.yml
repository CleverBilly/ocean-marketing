version: '3.8'

services:
  # 应用服务
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - GIN_MODE=release
      - TZ=Asia/Shanghai
    volumes:
      - ./logs:/app/logs
      - ./configs:/app/configs
      - ./data:/app/data
    restart: unless-stopped
    networks:
      - ocean-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    # 生产环境注释掉，使用阿里云RDS MySQL
    depends_on:
      - redis
      - rabbitmq
      # - mysql  # 生产环境使用阿里云RDS

  # MySQL数据库
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ocean_marketing
      MYSQL_USER: ocean
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/mysql:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - ocean-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - ocean-network

  # RabbitMQ消息队列
  rabbitmq:
    image: rabbitmq:3.12-management
    ports:
      - "5672:5672"
      - "15672:15672"  # 管理界面
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ocean-network

  # Jaeger链路追踪
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"  # 接收jaeger.thrift格式的数据
      - "6832:6832/udp"  # 接收jaeger.thrift格式的数据
      - "5778:5778"      # 配置端口
      - "16686:16686"    # Web UI
      - "14268:14268"    # 接收jaeger.thrift格式的数据
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
    networks:
      - ocean-network

  # Prometheus监控
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - ocean-network

  # Grafana可视化
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - ocean-network

  # Mailhog邮件测试工具
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"  # SMTP端口
      - "8025:8025"  # Web UI端口
    networks:
      - ocean-network

volumes:
  mysql_data:
  redis_data:
  rabbitmq_data:
  prometheus_data:
  grafana_data:

networks:
  ocean-network:
    driver: bridge 